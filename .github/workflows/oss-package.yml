on:
  workflow_call:
    inputs:
      lb_flavor:
        required: false
        type: string
        default: 'oss'
    secrets:
      bot_token:
        required: true
      gpg_private_key:
        required: true
      gpg_password:
        required: true
      install4j_lic:
        required: true
      install4j_apple_key:
        required: true
      install4j_apple_key_password:
        required: true
      install4j_apple_id:
        required: true
      install4j_apple_id_password:
        required: true
      install4j_win_key:
        required: true
      install4j_win_key_password:
        required: true

jobs:
  package:
    name: Package Artifacts
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.sha || github.event.after}}

      - name: Built Code Cache
        uses: actions/cache@v3.0.1
        with:
          key: built-code-${{ github.run_number }}-${{ github.run_attempt }}
          path: ./**/target

      ##Cache based on install4j file, since changes to JVM is seen in there. If install4j version changes without changing the file, change the prefix letter before hashFiles to force a new cache
      - name: Install4j Cache
        uses: actions/cache@v3.0.1
        with:
          key: install4j-A${{ hashFiles('liquibase-dist/src/main/install4j/liquibase.install4j') }}
          path: ~/.install4j8/**

      - name: Set up JDK 8
        uses: actions/setup-java@v3
        with:
          java-version: '8'
          distribution: 'temurin'
          gpg-private-key: ${{ secrets.gpg_private_key }}
          gpg-passphrase: GPG_PASSPHRASE
          cache: 'maven'
        env:
          GPG_PASSWORD: ${{ secrets.gpg_password }}

      - name: Download liquibase-pro
        uses: liquibase/action-download-artifact@v2-liquibase
        with:
          github_token: ${{ secrets.bot_token }}
          workflow: build.yml
          workflow_conclusion: success
          branch: "${{ needs.setup.outputs.proBranchName }}"
          name: liquibase-pro-modules
          path: download/liquibase-pro
          repo: liquibase/liquibase-pro

      - name: Install Built Modules
        run: |
          (find . -name *-SNAPSHOT.jar -exec mvn -B org.apache.maven.plugins:maven-install-plugin:3.0.0-M1:install-file -Dfile={} \;)
          (find . -name *-SNAPSHOT-sources.jar -exec mvn -B org.apache.maven.plugins:maven-install-plugin:3.0.0-M1:install-file -Dclassifier=sources -Dfile={} \;)
          mvn -B org.apache.maven.plugins:maven-install-plugin:3.0.0-M1:install-file -Dfile=download/liquibase-pro/liquibase-pro-0-SNAPSHOT.jar

      - name: Build & Sign Artifacts
        env:
          INSTALL4J_LICENSE: ${{ secrets.install4j_lic }}
          INSTALL4J_APPLE_KEY: ${{ secrets.install4j_apple_key }}
          INSTALL4J_APPLE_KEY_PASSWORD: ${{ secrets.install4j_apple_key_password }}
          INSTALL4J_APPLE_ID: ${{ secrets.install4j_apple_id }}
          INSTALL4J_APPLE_ID_PASSWORD: ${{ secrets.install4j_apple_id_password }}
          INSTALL4J_WINDOWS_KEY: ${{ secrets.install4j_win_key }}
          INSTALL4J_WINDOWS_KEY_PASSWORD: ${{ secrets.install4j_win_key_password }}
          GPG_PASSWORD: ${{ secrets.gpg_password }}
        run: |
          ## save install4j code signing keys
          mkdir -p liquibase-dist/target/keys
          echo "Saving apple key"
          echo "$INSTALL4J_APPLE_KEY" | base64 -d > liquibase-dist/target/keys/datical_apple.p12

          echo "Saving windows key"
          echo "$INSTALL4J_WINDOWS_KEY" | base64 -d > liquibase-dist/target/keys/datical_windows.pfx
          mvn -B -pl liquibase-dist -P liquibase-pro source:jar package

          ## extract tar content for other artifacts
          mkdir -p liquibase-dist/target/liquibase-0-SNAPSHOT
          (cd liquibase-dist/target/liquibase-0-SNAPSHOT && tar xfz ../liquibase-0-SNAPSHOT.tar.gz)

          ##create zip file from tar content
          (cd liquibase-dist/target/liquibase-0-SNAPSHOT && zip -r ../liquibase-0-SNAPSHOT.zip *)

          ##create installers
          (cd liquibase-dist && ${{ github.workspace }}/.github/util/package-install4j.sh 0-SNAPSHOT)

          find . -name original-*.jar -exec rm {} \;

          mkdir -p artifacts
          cp liquibase-dist/target/liquibase-0-SNAPSHOT.tar.gz artifacts
          cp liquibase-dist/target/liquibase-0-SNAPSHOT.zip artifacts
          cp liquibase-dist/target/liquibase-0-SNAPSHOT.jar artifacts
          cp liquibase-dist/target/liquibase-0-SNAPSHOT-sources.jar artifacts
          cp liquibase-dist/target/liquibase-*-installer-* artifacts

          cp liquibase-maven-plugin/target/liquibase-maven-plugin-0-SNAPSHOT.jar artifacts
          cp liquibase-maven-plugin/target/liquibase-maven-plugin-0-SNAPSHOT-sources.jar artifacts
          cp liquibase-maven-plugin/target/liquibase-maven-plugin-0-SNAPSHOT-javadoc.jar artifacts

          cp liquibase-cdi/target/liquibase-cdi-0-SNAPSHOT.jar artifacts
          cp liquibase-cdi/target/liquibase-cdi-0-SNAPSHOT-sources.jar artifacts
          cp liquibase-cdi/target/liquibase-cdi-0-SNAPSHOT-javadoc.jar artifacts

          cp target/liquibase-0-SNAPSHOT-javadoc.jar artifacts

          .github/util/sign-artifacts.sh artifacts

          ##prepare branch-named convenience artifacts directories
          mkdir artifacts-named
          cp liquibase-dist/target/liquibase-0-SNAPSHOT.tar.gz artifacts-named/liquibase-${{ needs.setup.outputs.thisBranchFileName }}.tar.gz
          cp liquibase-dist/target/liquibase-0-SNAPSHOT.jar artifacts-named/liquibase-${{ needs.setup.outputs.thisBranchFileName }}.jar
          cp liquibase-maven-plugin/target/liquibase-maven-plugin-0-SNAPSHOT.jar artifacts-named/liquibase-maven-plugin-${{ needs.setup.outputs.thisBranchFileName }}.jar
          cp liquibase-cdi/target/liquibase-cdi-0-SNAPSHOT.jar artifacts-named/liquibase-cdi-${{ needs.setup.outputs.thisBranchFileName }}.jar
          cp liquibase-extension-testing/target/liquibase-extension-testing-0-SNAPSHOT.jar artifacts-named/liquibase-extension-testing-${{ needs.setup.outputs.thisBranchFileName }}.jar
          cp liquibase-extension-testing/target/liquibase-extension-testing-0-SNAPSHOT-deps.jar artifacts-named/liquibase-extension-testing-${{ needs.setup.outputs.thisBranchFileName }}-deps.jar

      - name: Archive Packages
        uses: actions/upload-artifact@v3
        with:
          name: liquibase-artifacts
          path: artifacts/*

      - name: Archive Convenience Zip
        uses: actions/upload-artifact@v3
        with:
          name: liquibase-zip-${{ needs.setup.outputs.thisBranchFileName }}
          path: liquibase-dist/target/liquibase-0-SNAPSHOT/*

      - name: Archive Convenience Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: liquibase-artifacts-${{ needs.setup.outputs.thisBranchFileName }}
          path: artifacts-named/*
